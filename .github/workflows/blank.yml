# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Execute Gradle build
      run: ./gradlew bootJar
    - name: Deploy
      uses: easingthemes/ssh-deploy@main
      with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "build/libs/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/build/libs/"
          SCRIPT_BEFORE: |
            cd ${{secrets.REMOTE_TARGET}}
            ./stop.sh
          SCRIPT_AFTER: |
            cd ${{secrets.REMOTE_TARGET}}
            ./run.sh
    - name: Check Server Health
      run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://salus.the-omnia.ru/api/v3/health)
          if [[ "$response" == "200" ]]; then
            echo "Server is healthy"
          else
            echo "Server is down. Status code: $response"
            exit 1
          fi

